<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>fr.ul.miage.gl.restaurant</groupId>
	<artifactId>RestaurantManager</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<maven.compiler.source>11</maven.compiler.source>
		<maven.compiler.target>11</maven.compiler.target>
		<!-- OÃ¹ stocker la distribution binaire -->
		<project.bindist.dir.unix>${project.basedir}/bindist-unix</project.bindist.dir.unix>
		<project.bindist.dir.win>${project.basedir}/bindist-win</project.bindist.dir.win>
		<!-- Nom de la classe principale -->
		<project.main.classname>${project.groupId}.RestaurantManager</project.main.classname>
		<!-- Nom de la classe principale -->
		<project.bin.appname>run</project.bin.appname>
		<hamcrest.version>1.3</hamcrest.version>
		<junit.version>5.6.2</junit.version>
		<mockito.version>3.8.0</mockito.version>
		<ebean.version>12.8.0</ebean.version>
	</properties>
	<dependencies>

<!-- 		<dependency> -->
<!-- 			<groupId>org.avaje.composite</groupId> -->
<!-- 			<artifactId>logback</artifactId> -->
<!-- 			<version>1.1</version> -->
<!-- 		</dependency> -->

		<!-- Normally you only have the 1 JDBC driver but we are running and testing 
			this against postgres, sqlserver and mysql -->
		<dependency>
			<groupId>org.postgresql</groupId>
			<artifactId>postgresql</artifactId>
			<version>42.2.18</version>
		</dependency>

		<!-- <dependency> -->
		<!-- <groupId>com.microsoft.sqlserver</groupId> -->
		<!-- <artifactId>mssql-jdbc</artifactId> -->
		<!-- <version>6.2.2.jre8</version> -->
		<!-- <scope>test</scope> -->
		<!-- </dependency> -->

		<!-- <dependency> -->
		<!-- <groupId>mysql</groupId> -->
		<!-- <artifactId>mysql-connector-java</artifactId> -->
		<!-- <version>8.0.19</version> -->
		<!-- <scope>test</scope> -->
		<!-- </dependency> -->

		<dependency>
			<groupId>io.ebean</groupId>
			<artifactId>ebean-datasource</artifactId>
			<version>7.0</version>
		</dependency>

		<dependency>
			<groupId>io.ebean</groupId>
			<artifactId>ebean-migration</artifactId>
			<version>12.2.0</version>
		</dependency>

		<dependency>
			<groupId>io.ebean</groupId>
			<artifactId>ebean-core</artifactId>
			<version>${ebean.version}</version>
		</dependency>

		<!-- support for query beans -->
		<dependency>
			<groupId>io.ebean</groupId>
			<artifactId>ebean-querybean</artifactId>
			<version>${ebean.version}</version>
		</dependency>

		<dependency>
			<groupId>io.ebean</groupId>
			<artifactId>ebean-agent</artifactId>
			<version>12.8.3</version>
		</dependency>

		<!-- java annotation processor to generate query beans -->
		<dependency>
			<groupId>io.ebean</groupId>
			<artifactId>querybean-generator</artifactId>
			<version>${ebean.version}</version>
			<scope>provided</scope>
		</dependency>

		<!-- Optional but Ebean will read these annotations like @size to determine 
			column lengths etc -->
		<dependency>
			<groupId>javax.validation</groupId>
			<artifactId>validation-api</artifactId>
			<version>2.0.1.Final</version>
			<!--<version>1.0.0.GA</version> -->
		</dependency>

		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
			<version>1.7.30</version>
		</dependency>

<!-- 		<dependency> -->
<!-- 			<groupId>ch.qos.logback</groupId> -->
<!-- 			<artifactId>logback-classic</artifactId> -->
<!-- 			<version>1.2.3</version> -->
<!-- 		</dependency> -->

		<dependency>
			<groupId>io.ebean</groupId>
			<artifactId>ebean-test</artifactId>
			<version>${ebean.version}</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<!-- Langage DSL pour les tests -->
			<groupId>org.hamcrest</groupId>
			<artifactId>hamcrest-all</artifactId>
			<version>${hamcrest.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<!-- Tests unitaires en Java -->
			<groupId>org.junit.jupiter</groupId>
			<artifactId>junit-jupiter</artifactId>
			<version>${junit.version}</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<!-- Mocking en Java -->
			<groupId>org.mockito</groupId>
			<artifactId>mockito-junit-jupiter</artifactId>
			<version>${mockito.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-core</artifactId>
			<version>${mockito.version}</version>
			<scope>test</scope>
		</dependency>
	</dependencies>
	<build>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.8.1</version>
				<configuration>
					<release>${java.release}</release>
					<!-- <compilerArgs> -->
					<!-- &#45;&#45;enable-preview -->
					<!-- </compilerArgs> -->
				</configuration>
			</plugin>

			<plugin>
				<groupId>io.repaint.maven</groupId>
				<artifactId>tiles-maven-plugin</artifactId>
				<version>2.19</version>
				<extensions>true</extensions>
				<configuration>
					<tiles>
						<!-- <tile>org.avaje.tile:java-compile:1.1</tile> -->
						<tile>io.ebean.tile:enhancement:12.8.0</tile>
					</tiles>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>3.0.0-M4</version>
				<!-- <configuration> -->
				<!-- <argLine>&#45;&#45;enable-preview</argLine> -->
				<!-- </configuration> -->
			</plugin>
			<plugin>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>2.22.2</version>
			</plugin>
			<plugin>
				<groupId>org.jacoco</groupId>
				<artifactId>jacoco-maven-plugin</artifactId>
				<version>0.8.6</version>
				<configuration>
				</configuration>
				<executions>
					<execution>
						<id>pre-unit-test</id>
						<goals>
							<goal>prepare-agent</goal>
						</goals>
					</execution>
					<execution>
						<id>post-unit-test</id>
						<phase>test</phase>
						<goals>
							<goal>report</goal>
						</goals>
					</execution>
					<execution>
						<id>jacoco-check</id>
						<goals>
							<goal>check</goal>
						</goals>
						<configuration>
							<rules>
								<rule>
									<element>PACKAGE</element>
									<limits>
										<limit>
											<counter>LINE</counter>
											<value>COVEREDRATIO</value>
											<minimum>0.7</minimum>
										</limit>
									</limits>
								</rule>
							</rules>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.8.1</version>
				<configuration>
					<release>11</release>
				</configuration>
			</plugin>
			<plugin>
				<!-- create scripts for apps -->
				<!-- mvn package | appassembler:assemble -->
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>appassembler-maven-plugin</artifactId>
				<version>1.10</version>
				<configuration>
					<annotationProcessorPaths>
						<path>
							<groupId>io.ebean</groupId>
							<artifactId>querybean-generator</artifactId>
							<version>12.8.0</version>
						</path>
						<!-- other annotation processors -->
					</annotationProcessorPaths>
					<assembleDirectory>${project.bindist.dir}</assembleDirectory>
					<programs>
						<program>
							<mainClass>${project.main.classname}</mainClass>
							<id>${project.bin.appname}</id>
						</program>
					</programs>
				</configuration>
				<executions>
					<execution>
						<phase>package</phase>
						<goals>
							<goal>assemble</goal>
						</goals>
					</execution>
					<execution>
						<id>win</id>
						<phase>package</phase>
						<goals>
							<goal>assemble</goal>
						</goals>
						<configuration>
							<assembleDirectory>${project.bindist.dir.win}</assembleDirectory>
							<repositoryLayout>flat</repositoryLayout>
							<programs>
								<program>
									<platforms>
										<platform>windows</platform>
									</platforms>
									<mainClass>${project.main.classname}</mainClass>
									<id>${project.bin.appname}</id>
								</program>
							</programs>
						</configuration>
					</execution>
					<execution>
						<id>unix</id>
						<phase>package</phase>
						<goals>
							<goal>assemble</goal>
						</goals>
						<configuration>
							<assembleDirectory>${project.bindist.dir.unix}</assembleDirectory>
							<repositoryLayout>flat</repositoryLayout>
							<programs>
								<program>
									<platforms>
										<platform>unix</platform>
									</platforms>
									<mainClass>${project.main.classname}</mainClass>
									<id>${project.bin.appname}</id>
								</program>
							</programs>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<!-- create a distribution arhive -->
				<!-- mvn install ou assembly:single -->
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-assembly-plugin</artifactId>
				<version>3.1.0</version>
				<executions>
					<execution>
						<id>make-zip</id>
						<phase>install</phase>
						<goals>
							<goal>single</goal>
						</goals>
						<configuration>
							<descriptors>
								<descriptor>zip.xml</descriptor>
							</descriptors>
							<appendAssemblyId>true</appendAssemblyId>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.openjfx</groupId>
				<artifactId>javafx-maven-plugin</artifactId>
				<version>0.0.4</version>
				<configuration>
					<mainClass>fr.ul.miage.gl.restaurant.RestaurantManager</mainClass>
				</configuration>
			</plugin>
		</plugins>
	</build>
</project>